version: '3.8'

services:
  # PostgreSQL database with pgvector extension
  postgres:
    image: postgres:17-alpine
    container_name: umt-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: umt
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - umt_network

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: umt-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - umt_network

  # Health monitoring API
  health-api:
    build:
      context: .
      dockerfile: monitoring/Dockerfile.health-api
    container_name: umt-health-api
    environment:
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8001:8000"
    restart: unless-stopped
    networks:
      - umt_network

volumes:
  postgres_data:
  redis_data:

networks:
  umt_network:
    driver: bridge