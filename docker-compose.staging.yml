version: '3.8'

services:
  # API Gateway
  api-gateway:
    image: api-gateway:latest
    build:
      context: .
      dockerfile: docker/api-gateway.dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=staging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - umt-network

  # Health monitoring API
  health-api:
    build:
      context: .
      dockerfile: monitoring/Dockerfile.health-api
    container_name: umt-health-api
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
      - API_GATEWAY_HOST=api-gateway
      - ENVIRONMENT=staging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/ping"]
      interval: 60s
      timeout: 5s
      retries: 3
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - api-gateway
    ports:
      - "8001:8000"
    restart: unless-stopped
    networks:
      - umt-network

  # Infrastructure Services
  postgres:
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ultimatemarketing
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - umt-network
    command: >
      postgres
        -c shared_preload_libraries=''

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --save 60 1 --loglevel warning
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - umt-network

  rabbitmq:
    image: rabbitmq:3.9-alpine
    ports:
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - umt-network

networks:
  umt-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  rabbitmq-data:
