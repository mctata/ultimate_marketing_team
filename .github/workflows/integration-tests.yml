name: Integration Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/agents/integrations/**'
      - 'tests/agents/integrations/**'
      - 'tests/integration/**'
      - 'migrations/versions/**'
      - 'requirements.txt'
      - '.github/workflows/integration-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/agents/integrations/**'
      - 'tests/agents/integrations/**'
      - 'tests/integration/**'
      - 'migrations/versions/**'
      - 'requirements.txt'
      - '.github/workflows/integration-tests.yml'
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run (leave empty for all)'
        required: false
        default: ''

jobs:
  unit-tests:
    name: Integration Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov responses
      
      - name: Run Tests - All
        if: ${{ github.event.inputs.test_suite == '' }}
        run: |
          python -m pytest tests/agents/integrations/ -v --cov=src.agents.integrations --cov-report=xml
      
      - name: Run Tests - Social
        if: ${{ github.event.inputs.test_suite == 'social' }}
        run: |
          python -m pytest tests/agents/integrations/social/ -v --cov=src.agents.integrations.social --cov-report=xml
      
      - name: Run Tests - Email Marketing
        if: ${{ github.event.inputs.test_suite == 'email' }}
        run: |
          python -m pytest tests/agents/integrations/email_marketing/ -v --cov=src.agents.integrations.email_marketing --cov-report=xml
      
      - name: Run Tests - Analytics
        if: ${{ github.event.inputs.test_suite == 'analytics' }}
        run: |
          python -m pytest tests/agents/integrations/analytics/ -v --cov=src.agents.integrations.analytics --cov-report=xml
      
      - name: Run Tests - Developer Platform
        if: ${{ github.event.inputs.test_suite == 'developer' }}
        run: |
          python -m pytest tests/agents/integrations/developer/ -v --cov=src.agents.integrations.developer --cov-report=xml
      
      - name: Run Tests - CMS
        if: ${{ github.event.inputs.test_suite == 'cms' }}
        run: |
          python -m pytest tests/agents/integrations/test_cms_integration.py -v --cov=src.agents.integrations.cms_integration --cov-report=xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  integration-tests:
    name: Cross-Component Tests
    needs: unit-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov responses
      
      - name: Run Integration Tests
        run: |
          python -m pytest tests/integration/ -v --cov=src.agents.integrations --cov-report=xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: integrationtests
          name: codecov-umbrella
          fail_ci_if_error: false

  migration-tests:
    name: Database Migration Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_umt
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest alembic psycopg2-binary
      
      - name: Test Database Migrations
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_umt
        run: |
          python -m pytest tests/integration/test_migrations.py -v

  docker-integration-tests:
    name: Docker Integration Tests
    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Build test containers
        run: |
          docker-compose -f docker-compose.test.yml build
      
      - name: Run integration tests in Docker
        run: |
          docker-compose -f docker-compose.test.yml up --exit-code-from integration-tests integration-tests