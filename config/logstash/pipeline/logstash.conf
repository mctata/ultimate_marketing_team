input {
  # TCP input for JSON logs
  tcp {
    port => 5000
    codec => json
  }
  
  # UDP input for JSON logs
  udp {
    port => 5000
    codec => json
  }
  
  # Beats input for filebeat
  beats {
    port => 5044
  }
}

filter {
  # Parse the timestamp from the log message
  date {
    match => [ "timestamp", "ISO8601" ]
    target => "@timestamp"
  }
  
  # Add environment tag if present
  if [environment] {
    mutate {
      add_tag => [ "%{environment}" ]
    }
  }
  
  # Add request details if present
  if [request_id] {
    mutate {
      add_field => {
        "[@metadata][request_id]" => "%{request_id}"
      }
    }
  }
  
  # Process specific log types
  if [component] == "api" {
    mutate {
      add_tag => [ "api" ]
    }
  } else if [component] == "ai_api" {
    mutate {
      add_tag => [ "ai_api" ]
    }
  } else if [component] == "database" {
    mutate {
      add_tag => [ "database" ]
    }
  } else if [component] == "auth" {
    mutate {
      add_tag => [ "auth" ]
    }
  } else if [health] {
    mutate {
      add_tag => [ "health" ]
    }
  } else if [slow_query] {
    mutate {
      add_tag => [ "slow_query" ]
    }
  } else if [api_usage] {
    mutate {
      add_tag => [ "api_usage" ]
    }
  }
  
  # Add status tag for HTTP status codes
  if [status_code] {
    if [status_code] >= 500 {
      mutate {
        add_tag => [ "error", "server_error" ]
      }
    } else if [status_code] >= 400 {
      mutate {
        add_tag => [ "warning", "client_error" ]
      }
    }
  }
  
  # Add severity tag based on log level
  if [level] {
    if [level] == "ERROR" or [level] == "CRITICAL" or [level] == "FATAL" {
      mutate {
        add_tag => [ "error" ]
      }
    } else if [level] == "WARNING" {
      mutate {
        add_tag => [ "warning" ]
      }
    } else if [level] == "DEBUG" {
      mutate {
        add_tag => [ "debug" ]
      }
    }
  }
  
  # Anonymize sensitive data if needed
  if [params] and [params][password] {
    mutate {
      replace => { "[params][password]" => "[REDACTED]" }
    }
  }
}

output {
  # Send all logs to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "umt-logs-%{+YYYY.MM.dd}"
    
    # Optimize indexing
    template_overwrite => true
    document_id => "%{[@metadata][request_id]}-%{[thread_id]}-%{[timestamp]}"
    
    # Add application name to index
    ilm_enabled => false
  }
  
  # Send high-priority logs to a separate index
  if "error" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "umt-errors-%{+YYYY.MM.dd}"
    }
  }
  
  # Log to console during development
  if [environment] == "development" {
    stdout {
      codec => rubydebug
    }
  }
}