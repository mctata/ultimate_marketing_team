{"version":3,"file":"Login-fb142b29.js","sources":["../../node_modules/@mui/icons-material/esm/LockOutlined.js","../../src/pages/auth/Login.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2M9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9zm9 14H6V10h12zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2\"\n}), 'LockOutlined');","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Link,\n  Paper,\n  TextField,\n  Typography,\n  Alert,\n} from '@mui/material';\nimport { LockOutlined, Google, Facebook, LinkedIn } from '@mui/icons-material';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useAuth } from '../../hooks/useAuth';\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(6, 'Password should be of minimum 6 characters length')\n    .required('Password is required'),\n});\n\nconst Login = () => {\n  const { login, googleLogin, facebookLogin, linkedinLogin, error, isLoading } = useAuth();\n  const [rememberMe, setRememberMe] = useState(false);\n  \n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema,\n    onSubmit: async (values) => {\n      await login(values.email, values.password);\n    },\n  });\n  \n  const handleGoogleLogin = async () => {\n    await googleLogin();\n  };\n  \n  const handleFacebookLogin = async () => {\n    await facebookLogin();\n  };\n  \n  const handleLinkedInLogin = async () => {\n    await linkedinLogin();\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100vh',\n        }}\n      >\n        <Paper\n          elevation={3}\n          sx={{\n            p: 4,\n            width: '100%',\n            borderRadius: 2,\n          }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              mb: 3,\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n              <LockOutlined />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\" fontWeight=\"bold\">\n              Sign in\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ mt: 1 }}>\n              Welcome back! Please login to your account.\n            </Typography>\n          </Box>\n          \n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\n              {error}\n            </Alert>\n          )}\n          \n          <Box component=\"form\" onSubmit={formik.handleSubmit} sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.email && Boolean(formik.errors.email)}\n              helperText={formik.touched.email && formik.errors.email}\n              disabled={isLoading}\n            />\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              helperText={formik.touched.password && formik.errors.password}\n              disabled={isLoading}\n            />\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                mt: 1,\n              }}\n            >\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    value=\"remember\"\n                    color=\"primary\"\n                    checked={rememberMe}\n                    onChange={(e) => setRememberMe(e.target.checked)}\n                  />\n                }\n                label=\"Remember me\"\n              />\n              <Link component={RouterLink} to=\"/forgot-password\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Box>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2, py: 1.5 }}\n              disabled={isLoading}\n            >\n              {isLoading ? 'Signing in...' : 'Sign In'}\n            </Button>\n            \n            <Divider sx={{ my: 2 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                OR\n              </Typography>\n            </Divider>\n            \n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <Button\n                  fullWidth\n                  variant=\"outlined\"\n                  startIcon={<Google />}\n                  onClick={handleGoogleLogin}\n                  disabled={isLoading}\n                  sx={{ py: 1 }}\n                >\n                  Google\n                </Button>\n              </Grid>\n              <Grid item xs={4}>\n                <Button\n                  fullWidth\n                  variant=\"outlined\"\n                  startIcon={<Facebook />}\n                  onClick={handleFacebookLogin}\n                  disabled={isLoading}\n                  sx={{ py: 1 }}\n                >\n                  Facebook\n                </Button>\n              </Grid>\n              <Grid item xs={4}>\n                <Button\n                  fullWidth\n                  variant=\"outlined\"\n                  startIcon={<LinkedIn />}\n                  onClick={handleLinkedInLogin}\n                  disabled={isLoading}\n                  sx={{ py: 1 }}\n                >\n                  LinkedIn\n                </Button>\n              </Grid>\n            </Grid>\n            \n            <Box sx={{ mt: 2, textAlign: 'center' }}>\n              <Typography variant=\"body2\">\n                Don't have an account?{' '}\n                <Link component={RouterLink} to=\"/register\" variant=\"body2\">\n                  Sign Up\n                </Link>\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Login;"],"names":["LockOutlined","createSvgIcon","_jsx","validationSchema","Yup.object","Yup.string","Login","login","googleLogin","facebookLogin","linkedinLogin","error","isLoading","useAuth","rememberMe","setRememberMe","useState","formik","useFormik","values","__async","handleGoogleLogin","handleFacebookLogin","handleLinkedInLogin","jsxDEV","Container","Box","Paper","Avatar","this","Typography","Alert","TextField","FormControlLabel","Checkbox","e","Link","RouterLink","Button","Divider","Grid","Google","Facebook","LinkedIn"],"mappings":"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","x_google_ignoreList":[0]}